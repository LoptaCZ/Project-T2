buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath "org.spongepowered:mixingradle:${mixins}"
        classpath "org.parchmentmc:librarian:1.+"
    }
}

plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
}
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
group = "com.raven_cze"
version = "1.0-SNAPSHOT"
java {
    archivesBaseName="projt2"
    toolchain.languageVersion = JavaLanguageVersion.of(17)

}
minecraft {
    mappings channel:"parchment",version:"${parchment}-${mc}"
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'projt2'
            mods{
                projectt2{
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'projt2'
            mods {
                projectt2 {
                    source sourceSets.main
                }
            }
        }
        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'projt2'
            mods {
                projectt2 {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'projectt2', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                projectt2 {
                    source sourceSets.main
                }
            }
        }
    }
}
mixin {
    add sourceSets.main,"projt2.refmap.json"
    config "projt2.mixins.json"
}
repositories {
    maven{
        name="Progwml6 maven"
        url="https://dvs1.progwml6.com/files/maven/"
    }
    maven{
        name="ModMaven"
        url="https://modmaven.dev"
    }
}
dependencies {
    minecraft "net.minecraftforge:forge:${mc}-${forge}"

    compileOnly fg.deobf("mezz.jei:jei-${mc}:${jei}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${mc}:${jei}")

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}
jar {
    manifest {
        attributes([
                "Specification-Title"     : "projectt2",
                "Specification-Vendor"    : "Lorem, Impsum",
                "Specification-Version"   : "${projt2}", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${projt2}",
                "Implementation-Vendor"   : "Lorem, Impsum",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
jar.finalizedBy('reobfJar')
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
